<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 配置bean -->
	<!-- class：bean 的全类名，通过反射方式在IOC容器中创建bean。所以要求bean中必须有无参的构造器。 -->
	<!--id：标识容器中的bean，id唯一。 -->
	<bean id="helloWorld" class="sylu.spring.beans.HelloWorld">
		<property name="name" value="Spring"></property>
	</bean>


	<!-- 通过构造方法来配置bean的属性 -->
	<bean id="car" class="sylu.spring.beans.Car">
		<constructor-arg value="Audi" index="0"></constructor-arg>
		<constructor-arg value="Shanghai" index="1"></constructor-arg>
		<constructor-arg value="300000" index="2"></constructor-arg>
	</bean>
	<!-- 使用构造器注入属性值可以指定参数的位置和参数的类型。以区分重载构造器 -->
	<bean id="car2" class="sylu.spring.beans.Car">
		<constructor-arg value="Baoma" name="brand"></constructor-arg>
		<!-- 如果字面值包含特殊字符可以使用<![CDATA[]]>包裹起来 -->
		<!-- 属性值也可以使用value子结点直接配置 -->
		<constructor-arg type="java.lang.String">
			<value><![CDATA[<Shanghai^>]]></value>
		</constructor-arg>
		<constructor-arg type="int">
			<value>250</value>
		</constructor-arg>
	</bean>


	<bean id="person" class="sylu.spring.beans.Person">
		<property name="name" value="Tom"></property>
		<property name="age" value="24"></property>
		<!-- 可以使用property的ref属性建立bean之间的引用关系 -->
		<!-- <property name="car" ref="car"></property> -->
		<!-- <property name="car"> <ref bean="car2"/> </property> -->

		<!-- 内部Bean，不能被外部引用，只能在内部使用 -->
		<property name="car">
			<bean class="sylu.spring.beans.Car">
				<constructor-arg value="Ford"></constructor-arg>
				<constructor-arg value="ChangAn"></constructor-arg>
				<constructor-arg value="20000"></constructor-arg>
			</bean>
		</property>
	</bean>


	<bean id="person2" class="sylu.spring.beans.Person">
		<constructor-arg value="Jerry"></constructor-arg>
		<constructor-arg value="25"></constructor-arg>
		<constructor-arg ref="car"></constructor-arg>
	</bean>

</beans>
