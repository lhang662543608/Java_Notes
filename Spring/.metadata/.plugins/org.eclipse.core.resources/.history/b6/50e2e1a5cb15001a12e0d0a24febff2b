package sylu.spring.hibernate.dao.impl;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import sylu.spring.hibernate.dao.BookShopDao;

@Repository
public class BookShopDaoImpl implements BookShopDao {
	@Autowired
	private SessionFactory sessionFactory;

	// 不推荐使用HibernateTemplate和HibernateDaoSupport
	// 因为这样会导致Dao和spring的API进行耦合，可移植性变差。
	// private HibernateTemplate hibernateTemplate;

	// 获取和当前线程绑定的session
	private Session getSession() {
		return sessionFactory.getCurrentSession();
	}

	@Override
	public int findBookPriceByIsbn(Integer isbn) {
		String hql = "SELECT b.price FROM book b WHERE b.isbn = ?";
		Query query = getSession().createQuery(hql).setInteger(0, isbn);
		return (int) query.uniqueResult();
	}

	@Override
	public void updateBookStock(Integer isbn) {
		//验证书的库存是否充足
		String hql2 = "SELECT b.stock from book b WHERE b.isbn = ?";
		int  stock  = (int) getSession().createQuery(hql2).setInteger(0, isbn).uniqueResult();
		if (stock == 0 ) {
			throw new 
			
		}
		
		String hql = "UODATE book b SET b.stock = b.stock - 1 WHERE b.isbn = ?";
		getSession().createQuery(hql).setInteger(0, isbn).executeUpdate();

	}

	@Override
	public void updateUserAccount(String username, Integer price) {
		// TODO Auto-generated method stub

	}

}
