<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sylu.mybatis.dao.EmployeeMapper">
	<!-- 
		namespace:名称空间;指定为接口的全类名
		id：唯一标识
		resultType：返回值类型
		#{id}：从传递过来的参数中取出id值
		
		public Employee getEmpById(Integer id);
	 -->
 	<select id="getEmpById" resultType="sylu.mybatis.been.Employee">
		select * from tbl_employee where id = #{id}
	</select>
	<select id="getEmpById" resultType="sylu.mybatis.been.Employee"
		databaseId="mysql">
		select * from tbl_employee where id = #{id}
	</select>
	<select id="getEmpById" resultType="sylu.mybatis.been.Employee"
		databaseId="oracle">
		select EMPLOYEE_ID id,LAST_NAME	lastName,EMAIL email 
		from employees where EMPLOYEE_ID=#{id}
	</select>


	<!-- public void addEmp(Employee employee); -->
	<!-- parameterType:参数类型，可以省略。
		获取自增主键的值：
			mysql支持自增主键。自增主键值的获取，mybatis也是利用statement.getGenerateKeys()来获取主键的值；
			useGeneratedKeys="true"：使用自增主键获取主键值策略；
			keyProperty：指定对应的主键属性，也就是mybatis获取到主键之后，将这个值封装给javabean的那个属性；
	 -->
	<insert id="addEmp" parameterType="sylu.mybatis.been.Employee"	
		useGeneratedKeys="true" keyProperty="id" databaseId="mysql">
		insert into tbl_employee(last_name,email,gender)  
		values(#{lastName},#{email},#{gender})
	</insert>
	
	
	
	<!-- public void updateEmp(Employee employee); -->
	<update id="updateEmp">
		update tbl_employee
		set last_name=#{lastName},email=#{email},gender=#{gender}
		where id=#{id}
	</update>
	
	
	
	<!-- public Employee deleteEmpById(Integer id); -->
	<delete id="deleteEmpById">
		delete from tbl_employee
		where id=#{id}
	</delete>
</mapper>